plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.17'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok' // 테스트를 위한 세팅 @Slf4j
	testImplementation 'org.projectlombok:lombok' // 테스트를 위한 세팅 @Slf4j

	//서버재시작 없이 자동반영 툴
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// h2 database
	runtimeOnly 'com.h2database:h2'

	// JPA 설정
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//JUnit
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// spring security oauth2 client
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// 유효성 검사
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Swagger
	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	//spring-session-jdbc 등록(데이터베이스를 세션 저장소로 사용하기)
//	implementation 'org.springframework.session:spring-session-jdbc'

	// security
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	//testImplementation("org.springframework.security:spring-security-test")

	//mariaDB 드라이버 등록
	implementation 'org.mariadb.jdbc:mariadb-java-client'

}

tasks.named('test') {
	useJUnitPlatform()
}
